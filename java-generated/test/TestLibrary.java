package test;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import java.nio.ByteBuffer;
/**
 * JNA Wrapper for library <b>test</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TestLibrary implements Library {
	public static final String JNA_LIBRARY_NAME = "test";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(TestLibrary.JNA_LIBRARY_NAME);
	static {
		Native.register(TestLibrary.JNA_LIBRARY_NAME);
	}
	/**
	 * <i>native declaration : line 16</i><br>
	 * enum values
	 */
	/**
	 * <i>native declaration : line 16</i><br>
	 * enum values
	 */
	public static interface Optype {
		/// <i>native declaration : line 17</i>
		public static final int Resize = (int)0;
		/// <i>native declaration : line 17</i>
		public static final int Text = (int)1;
		/// <i>native declaration : line 17</i>
		public static final int Crop = (int)2;
		/// <i>native declaration : line 17</i>
		public static final int Unknown = (int)3;
	};
	/**
	 * Original signature : <code>Operation* newResizeOp(int)</code><br>
	 * <i>native declaration : line 37</i>
	 */
	public static native Operation newResizeOp(int percent);
	/**
	 * Original signature : <code>Operation* newTextOp(char*)</code><br>
	 * <i>native declaration : line 39</i><br>
	 * @deprecated use the safer methods {@link #newTextOp(java.nio.ByteBuffer)} and {@link #newTextOp(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native Operation newTextOp(Pointer text);
	/**
	 * Original signature : <code>Operation* newTextOp(char*)</code><br>
	 * <i>native declaration : line 39</i>
	 */
	public static native Operation newTextOp(ByteBuffer text);
	/**
	 * Original signature : <code>Operation* newCropOp(int, int, int, int)</code><br>
	 * <i>native declaration : line 41</i>
	 */
	public static native Operation newCropOp(int x1, int y1, int x2, int y2);
	/**
	 * Original signature : <code>void printOp(const Operation*)</code><br>
	 * <i>native declaration : line 43</i>
	 */
	public static native void printOp(Operation op);
	/**
	 * Original signature : <code>void print_opstack(const Opstack*)</code><br>
	 * <i>native declaration : line 45</i>
	 */
	public static native void print_opstack(Opstack opstack);
}
